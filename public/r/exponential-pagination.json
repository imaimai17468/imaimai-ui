{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "exponential-pagination",
  "type": "registry:ui",
  "title": "Exponential Pagination",
  "description": "A pagination component with exponential jumps (powers of 2) for handling large page counts like 500+",
  "registryDependencies": [
    "pagination"
  ],
  "files": [
    {
      "path": "src/components/registry/exponential-pagination.tsx",
      "content": "\"use client\";\n\nimport {\n\tPagination,\n\tPaginationContent,\n\tPaginationEllipsis,\n\tPaginationItem,\n\tPaginationLink,\n\tPaginationNext,\n\tPaginationPrevious,\n} from \"@/components/ui/pagination\";\n\nexport interface ExponentialPaginationProps {\n\t/** 現在のページ（1-indexed） */\n\tcurrentPage: number;\n\t/** 総ページ数 */\n\ttotalPages: number;\n\t/** ページ変更時のコールバック */\n\tonPageChange: (page: number) => void;\n\t/** 現在ページの前後に表示する連続ページ数（デフォルト: 3） */\n\tsiblingCount?: number;\n}\n\ntype PageItem =\n\t| { type: \"page\"; value: number }\n\t| { type: \"ellipsis\"; id: string };\n\n/**\n * 指数的なページ番号の配列を生成する\n * 例: 1, 2, 3, 4, 8, 16, 32, 64, ...（4以降は2の累乗）\n * 現在ページの前後はsiblingCount分連続で表示\n */\nfunction generateExponentialPages(\n\tcurrentPage: number,\n\ttotalPages: number,\n\tsiblingCount: number,\n): PageItem[] {\n\tconst pages = new Set<number>();\n\n\t// 1, 2, 3 は常に表示\n\tpages.add(1);\n\tif (totalPages >= 2) pages.add(2);\n\tif (totalPages >= 3) pages.add(3);\n\n\t// 2の累乗のページ（4以降: 4, 8, 16, 32, 64, ...）\n\tlet power = 2; // 2^2 = 4 から開始\n\twhile (2 ** power <= totalPages) {\n\t\tpages.add(2 ** power);\n\t\tpower++;\n\t}\n\n\t// 現在ページの前後siblingCount分を連続表示\n\tfor (\n\t\tlet i = Math.max(1, currentPage - siblingCount);\n\t\ti <= Math.min(totalPages, currentPage + siblingCount);\n\t\ti++\n\t) {\n\t\tpages.add(i);\n\t}\n\n\t// 最後のページは常に表示\n\tpages.add(totalPages);\n\n\t// ソートして配列に変換\n\tconst sortedPages = Array.from(pages).sort((a, b) => a - b);\n\n\t// 省略記号を挿入（連続していない箇所）\n\tconst result: PageItem[] = [];\n\tfor (let i = 0; i < sortedPages.length; i++) {\n\t\tif (i > 0 && sortedPages[i] - sortedPages[i - 1] > 1) {\n\t\t\tresult.push({ type: \"ellipsis\", id: `ellipsis-${i}` });\n\t\t}\n\t\tresult.push({ type: \"page\", value: sortedPages[i] });\n\t}\n\n\treturn result;\n}\n\n/**\n * 指数的なページジャンプを持つPaginationコンポーネント\n * AtCoderのstandingsページのようなページ数が多い場合に適している\n *\n * @example\n * ```tsx\n * <ExponentialPagination\n *   currentPage={256}\n *   totalPages={500}\n *   onPageChange={(page) => console.log(page)}\n *   siblingCount={3}\n * />\n * ```\n */\nexport function ExponentialPagination({\n\tcurrentPage,\n\ttotalPages,\n\tonPageChange,\n\tsiblingCount = 3,\n}: ExponentialPaginationProps) {\n\tconst pages = generateExponentialPages(currentPage, totalPages, siblingCount);\n\n\tconst handlePrevious = () => {\n\t\tif (currentPage > 1) {\n\t\t\tonPageChange(currentPage - 1);\n\t\t}\n\t};\n\n\tconst handleNext = () => {\n\t\tif (currentPage < totalPages) {\n\t\t\tonPageChange(currentPage + 1);\n\t\t}\n\t};\n\n\treturn (\n\t\t<Pagination>\n\t\t\t<PaginationContent>\n\t\t\t\t{/* 前へボタン */}\n\t\t\t\t<PaginationItem>\n\t\t\t\t\t<PaginationPrevious\n\t\t\t\t\t\tonClick={handlePrevious}\n\t\t\t\t\t\taria-disabled={currentPage === 1}\n\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\tcurrentPage === 1 ? \"pointer-events-none opacity-50\" : \"\"\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t</PaginationItem>\n\n\t\t\t\t{/* ページ番号 */}\n\t\t\t\t{pages.map((item) => (\n\t\t\t\t\t<PaginationItem\n\t\t\t\t\t\tkey={\n\t\t\t\t\t\t\titem.type === \"page\"\n\t\t\t\t\t\t\t\t? `page-${item.value}`\n\t\t\t\t\t\t\t\t: `ellipsis-${item.id}`\n\t\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t\t{item.type === \"ellipsis\" ? (\n\t\t\t\t\t\t\t<PaginationEllipsis />\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<PaginationLink\n\t\t\t\t\t\t\t\tonClick={() => onPageChange(item.value)}\n\t\t\t\t\t\t\t\tisActive={item.value === currentPage}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{item.value}\n\t\t\t\t\t\t\t</PaginationLink>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</PaginationItem>\n\t\t\t\t))}\n\n\t\t\t\t{/* 次へボタン */}\n\t\t\t\t<PaginationItem>\n\t\t\t\t\t<PaginationNext\n\t\t\t\t\t\tonClick={handleNext}\n\t\t\t\t\t\taria-disabled={currentPage === totalPages}\n\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\tcurrentPage === totalPages ? \"pointer-events-none opacity-50\" : \"\"\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t</PaginationItem>\n\t\t\t</PaginationContent>\n\t\t</Pagination>\n\t);\n}\n",
      "type": "registry:component"
    }
  ]
}